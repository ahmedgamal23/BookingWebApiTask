@{
    ViewData["Title"] = "Home Page";
}

<div id="alert-container"></div>

<h1>@ViewData["Title"]</h1>

<div class="row mt-4 mb-4">
    <button class="btn btn-primary" onclick="getReservations()">Get All Reservations</button>
</div>

<div class="row mt-4 mb-4">
    <div class="col-md-9">
        <input id="reservation_id" type="text" class="form-control" placeholder="Enter Reservation ID" />
    </div>
    <div class="col-md-3">
        <button class="btn btn-secondary" onclick="getReservationById()">Get Reservation</button>
    </div>
</div>

<div id="AllReservation" class="mt-5"></div>

<script>
    const allReservation = document.getElementById("AllReservation");
    const alertContainer = document.getElementById("alert-container");

    function showAlert(message, type) {
        alertContainer.innerHTML = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                <strong>${type === 'success' ? 'Success' : 'Error'}:</strong> ${message}
                <button type="button" class="close" data-dismiss="alert" aria-label="Close" onclick="this.parentElement.remove();">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        `;
    }
    
    async function getReservations() {
        try {
            const response = await fetch("https://localhost:44300/api/Reservation/GetAllReservations", {
                method: "GET",
                headers: { "Content-Type": "application/json" }
            });

            if (!response.ok) {
                allReservation.style.display = "none";
                throw new Error("Failed to retrieve reservations");
            }

            const data = await response.json();

            if (!data || data.length === 0) {
                showAlert("No reservations found.", "warning");
                allReservation.innerHTML = "<p>No reservations found.</p>";
                return;
            }

            allReservation.style.display = "block";
            showAlert("Reservations retrieved successfully!", "success");
            displayReservations(data);
        } catch (error) {
            showAlert(error.message, "danger");
            allReservation.style.display = "none";
            console.error("Reservation Error:", error);
        }
    }

    async function getReservationById() {
        const reservationId = document.getElementById("reservation_id").value.trim();

        if (!reservationId) {
            showAlert("Please enter a reservation ID.", "warning");
            return;
        }

        try {
            const response = await fetch(`https://localhost:44300/api/Reservation/${reservationId}`, {
                method: "GET",
                headers: { "Content-Type": "application/json" }
            });

            if (!response.ok) {
                allReservation.style.display = "none";
                throw new Error(`Failed to retrieve reservation ${reservationId}. (Status: ${response.status})`);
            }

            const data = await response.json();
            if (!data) {
                allReservation.style.display = "none";
                showAlert("Reservation not found.", "warning");
                return;
            }

            allReservation.style.display = "block";
            showAlert("Reservation retrieved successfully!", "success");
            displayReservations([data]); // Convert object to array
        } catch (error) {
            showAlert(error.message, "danger");
            allReservation.style.display = "none";
            console.error("Reservation Error:", error);
        }
    }

    function displayReservations(reservations) {
        if (!reservations || reservations.length === 0) {
            allReservation.innerHTML = "<p>No reservations found.</p>";
            return;
        }

        let table = `<table class="table table-bordered table-striped">
                        <thead class="thead-dark">
                            <tr>
                                <th>Reserved By</th>
                                <th>Customer Name</th>
                                <th>Trip</th>
                                <th>Notes</th>
                                <th>Reservation Date</th>
                                <th>Creation Date</th>
                            </tr>
                        </thead>
                        <tbody>`;

        reservations.forEach(reservation => {
            table += `<tr>
                        <td>${reservation.name || "N/A"}</td>
                        <td>${reservation.customerName || "N/A"}</td>
                        <td>${reservation.trip.name || "N/A"}</td>
                        <td>${reservation.notes || "N/A"}</td>
                        <td>${reservation.reservationDate || "N/A"}</td>
                        <td>${reservation.creationDate || "N/A"}</td>
                      </tr>`;
        });

        table += `</tbody></table>`;
        allReservation.innerHTML = table;
    }
</script>
